version: '3.8'

services:
  shop:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shop_container
    env_file:
      - .env
    ports:
      - "${REST_SERVER_PORT}:${REST_SERVER_PORT}"
    depends_on:
      postgres_shop:
        condition: service_healthy
    networks:
      - shop_network

  postgres_shop:
    image: postgres:15-alpine
    container_name: postgres_container_shop
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres_shop
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "psql -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - shop_network

  redis:
    image: redis:7
    container_name: redis_container
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shop_network

volumes:
  postgres_data:

networks:
  shop_network:
    driver: bridge